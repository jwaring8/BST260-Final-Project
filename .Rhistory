ifelse(d$diag_2 %in% c(140:239), "Neoplasm",
ifelse(d$diag_2 %in% c(780, 781, 784, 790:799), "Other",
ifelse(d$diag_2 %in% c(240:249, 251:279), "Endocrine_Nutrition_Metabolic",
ifelse(d$diag_2 %in% c(680:709, 782), "Skin",
ifelse(d$diag_2 %in% c(001:139), "Infectious",
ifelse(d$diag_2 %in% c(290:319), "Mental",
ifelse(d$diag_2 %in% c(280:289), "Blood",
ifelse(d$diag_2 %in% c(320:359), "Nervous",
ifelse(d$diag_2 %in% c(630:679), "Pregnancy",
ifelse(d$diag_2 %in% c(360:389), "Sense",
ifelse(d$diag_2 %in% c(740:759), "Congenital", "NULL")
)))))))))))))))))))
d$diag_3grp <- ifelse (d$diag_3 == "?", "Unknown",
ifelse(grepl(d$diag_3, pattern = "[EV]") == T, "External",
ifelse(floor(as.numeric(d$diag_3)) == 250, "Circulatory",
ifelse(d$diag_3 %in% c(390:459, 785), "Diabetes",
ifelse(d$diag_3 %in% c(460:519, 786), "Respiratory",
ifelse(d$diag_3 %in% c(520:579, 787), "Digestive",
ifelse(d$diag_3 %in% c(800:999), "Injury",
ifelse(d$diag_3 %in% c(710:739), "Musculoskeletal",
ifelse(d$diag_3 %in% c(580:629, 788), "Genitourinary",
ifelse(d$diag_3%in% c(140:239), "Neoplasm",
ifelse(d$diag_3 %in% c(780, 781, 784, 790:799), "Other",
ifelse(d$diag_3 %in% c(240:249, 251:279), "Endocrine_Nutrition_Metabolic",
ifelse(d$diag_3 %in% c(680:709, 782), "Skin",
ifelse(d$diag_3 %in% c(001:139), "Infectious",
ifelse(d$diag_3 %in% c(290:319), "Mental",
ifelse(d$diag_3 %in% c(280:289), "Blood",
ifelse(d$diag_3 %in% c(320:359), "Nervous",
ifelse(d$diag_3 %in% c(630:679), "Pregnancy",
ifelse(d$diag_3 %in% c(360:389), "Sense",
ifelse(d$diag_3 %in% c(740:759), "Congenital", "NULL")
)))))))))))))))))))
d$diag_1grp <- as.factor(d$diag_1grp)
d$diag_2grp <- as.factor(d$diag_2grp)
d$diag_3grp <- as.factor(d$diag_3grp)
d <- one_hot(data.table(d), cols = c("diag_1grp", "diag_2grp", "diag_3grp"))
d <- as.data.frame(d)
# Encoding gender as 0 = male, 1 = female, 2 = Unknown/Invalid
d$gender <- ifelse(d$gender == "Male", 0,
ifelse(d$gender == "Female", 1,
ifelse(d$gender == "Unknown/Invalid", 2, "NULL")))
d$gender <- as.integer(d$gender)
# Encoding ages
start_age <- ifelse(d$age == "[0-10)", 0,
ifelse(d$age == "[10-20)", 10,
ifelse(d$age == "[20-30)", 20,
ifelse(d$age == "[30-40)", 30,
ifelse(d$age == "[40-50)", 40,
ifelse(d$age == "[50-60)", 50,
ifelse(d$age == "[60-70)", 60,
ifelse(d$age == "[70-80)", 70,
ifelse(d$age == "[80-90)", 80, 90)))))))))
d$end_age <- ifelse(d$age == "[0-10)", 10,
ifelse(d$age == "[10-20)", 20,
ifelse(d$age == "[20-30)", 30,
ifelse(d$age == "[30-40)", 40,
ifelse(d$age == "[40-50)", 50,
ifelse(d$age == "[50-60)", 60,
ifelse(d$age == "[60-70)", 70,
ifelse(d$age == "[70-80)", 80,
ifelse(d$age == "[80-90)", 90, 100)))))))))
d <- within(d, rm(age))
d$max_glu_serum <- ifelse(d$max_glu_serum == "None", 0,
ifelse(d$max_glu_serum == "Norm", 1,
ifelse(d$max_glu_serum == ">200", 2, 3)))
# A1C change to abnormal (>7 and >8) = 2 , normal = 1, and none = 0
d$A1Cresult <- ifelse(d$A1Cresult == "None", 0,
ifelse(d$A1Cresult == "Norm", 1,
ifelse(d$A1Cresult %in% c(">7", ">8"), 2, "NULL")))
# Changing insulin to numeric
# 0 = No
# 1 = Down
# 2 = Steady
# 3 = Up
d$insulin <- ifelse(d$insulin == "No",0, ifelse(d$insulin == "Down", 1, ifelse(d$insulin == "Steady", 2, 3)))
# changing change to numeric
# 0 = No
# 1 = Ch
d$change <- ifelse(d$change == "Ch", 1, 0)
# changing readmitted to numeric
# 0 = No
# 1 = >30
# 2 = <30 (in order of most concerning level of readmission
d$readmitted <- ifelse(d$readmitted == "NO", 0, ifelse(d$readmitted == "<30", 1, 2))
# Sum of number of outpatient, emergency and inpatient encounters
d$healthcare_utilization <- (d$number_outpatient + d$number_emergency + d$number_inpatient)
library(dplyr)
library(tidyverse)
library(foreign)
library(data.table)
library(mltools)
## Reading in data
d <- read.csv("dataset/diabetic_data.csv", header = TRUE)
# Confirmed that none of the patients who expired were listed as readmitted
d <- filter(d, !(discharge_disposition_id %in% c(11, 19, 20, 21)))
drops <- c("encounter_id", "weight", "payer_code", "medical_specialty", "diabetesMed")
d <- d[ , !(names(d) %in% drops)]
# One-Hot Encoding Race
d$race_unknown <- ifelse(d$race == "?", 1, 0)
d$race_cauc <- ifelse(d$race == "Caucasian", 1, 0)
d$race_afam <- ifelse(d$race == "AfricanAmerican", 1, 0)
d$race_oth <- ifelse(d$race == "Other", 1, 0)
d$race_asian <- ifelse(d$race == "Asian", 1, 0)
d$race_hisp <- ifelse(d$race == "Hispanic", 1, 0)
d <- within(d, rm(race))
# set up dummy variables for admission types
d <- mutate(d, at_emergent = as.numeric(admission_type_id %in% c(1, 2, 7)),
at_elective = as.numeric(admission_type_id == 3),
at_other = as.numeric(admission_type_id %in% c(4, 5, 6, 8)))
# Set up dummy variables for discharge dispositions
d <- mutate(d, dd_home = as.numeric(discharge_disposition_id %in% c(1, 6, 8)),
dd_facility_transfer = as.numeric(discharge_disposition_id %in% c(2, 3, 4, 5, 10, 16, 17, 22, 23, 24, 30, 27, 28, 29)),
dd_other = as.numeric(discharge_disposition_id %in% c(7, 18, 25, 26)),
dd_admitted = as.numeric(discharge_disposition_id %in% c(9, 12, 15)),
# add_expired = as.numeric(discharge_disposition_id %in% c(11, 19, 20, 21)), (dropped patients who expired)
dd_hospice = as.numeric(discharge_disposition_id %in% c(13, 14)))
# Set up dummy variables for admission source
d <- mutate(d, as_outpatient = as.numeric(admission_source_id %in% c(1, 2, 3)),
as_facility_transfer = as.numeric(admission_source_id %in% c(4, 5, 6, 10, 18, 19, 22, 25, 26)),
as_ed = as.numeric(admission_source_id %in% c(7)),
as_other = as.numeric(admission_source_id %in% c(8, 9, 15, 17, 20, 21)),
as_newborn = as.numeric(admission_source_id %in% c(11, 12, 13, 14, 23, 24)))
d <- within(d, rm(admission_type_id))
d <- within(d, rm(discharge_disposition_id))
d <- within(d, rm(admission_source_id))
# Code to group ICD codes according to Table 2 in (Strack et al. 2014)
# 0 = ?
# 1 = external
# 2 = circulatory
# 3 = diabetes
# 4 = respiratory
# 5 = digestive
# 6 = injury
# 7 = musculoskeletal
# 8 = genitourinary
# 9 = neoplasm
# 10 = other
# 11 = endocrine_nutrition_metabolic
# 12 = skin
# 13 = infectious
# 14 = mental
# 15 = blood
# 16 = nervous
# 17 = pregnancy
# 18 = sense
# 19 = congenital
d$diag_1 <- as.character(d$diag_1)
d$diag_2 <- as.character(d$diag_2)
d$diag_3 <- as.character(d$diag_3)
d$diag_1grp <- ifelse (d$diag_1 == "?", "Unknown",
ifelse(grepl(d$diag_1, pattern = "[EV]") == T, "External",
ifelse(floor(as.numeric(d$diag_1)) == 250, "Circulatory",
ifelse(d$diag_1 %in% c(390:459, 785), "Diabetes",
ifelse(d$diag_1 %in% c(460:519, 786), "Respiratory",
ifelse(d$diag_1 %in% c(520:579, 787), "Digestive",
ifelse(d$diag_1 %in% c(800:999), "Injury",
ifelse(d$diag_1 %in% c(710:739), "Musculoskeletal",
ifelse(d$diag_1 %in% c(580:629, 788), "Genitourinary",
ifelse(d$diag_1 %in% c(140:239), "Neoplasm",
ifelse(d$diag_1 %in% c(780, 781, 784, 790:799), "Other",
ifelse(d$diag_1 %in% c(240:249, 251:279), "Endocrine_Nutrition_Metabolic",
ifelse(d$diag_1 %in% c(680:709, 782), "Skin",
ifelse(d$diag_1 %in% c(001:139), "Infectious",
ifelse(d$diag_1 %in% c(290:319), "Mental",
ifelse(d$diag_1 %in% c(280:289), "Blood",
ifelse(d$diag_1 %in% c(320:359), "Nervous",
ifelse(d$diag_1 %in% c(630:679), "Pregnancy",
ifelse(d$diag_1 %in% c(360:389), "Sense",
ifelse(d$diag_1 %in% c(740:759), "Congenital", "NULL")
)))))))))))))))))))
d$diag_2grp <- ifelse (d$diag_2 == "?", "Unknown",
ifelse(grepl(d$diag_2, pattern = "[EV]") == T, "External",
ifelse(floor(as.numeric(d$diag_2)) == 250, "Circulatory",
ifelse(d$diag_2 %in% c(390:459, 785), "Diabetes",
ifelse(d$diag_2 %in% c(460:519, 786), "Respiratory",
ifelse(d$diag_2 %in% c(520:579, 787), "Digestive",
ifelse(d$diag_2 %in% c(800:999), "Injury",
ifelse(d$diag_2 %in% c(710:739), "Musculoskeletal",
ifelse(d$diag_2 %in% c(580:629, 788), "Genitourinary",
ifelse(d$diag_2 %in% c(140:239), "Neoplasm",
ifelse(d$diag_2 %in% c(780, 781, 784, 790:799), "Other",
ifelse(d$diag_2 %in% c(240:249, 251:279), "Endocrine_Nutrition_Metabolic",
ifelse(d$diag_2 %in% c(680:709, 782), "Skin",
ifelse(d$diag_2 %in% c(001:139), "Infectious",
ifelse(d$diag_2 %in% c(290:319), "Mental",
ifelse(d$diag_2 %in% c(280:289), "Blood",
ifelse(d$diag_2 %in% c(320:359), "Nervous",
ifelse(d$diag_2 %in% c(630:679), "Pregnancy",
ifelse(d$diag_2 %in% c(360:389), "Sense",
ifelse(d$diag_2 %in% c(740:759), "Congenital", "NULL")
)))))))))))))))))))
d$diag_3grp <- ifelse (d$diag_3 == "?", "Unknown",
ifelse(grepl(d$diag_3, pattern = "[EV]") == T, "External",
ifelse(floor(as.numeric(d$diag_3)) == 250, "Circulatory",
ifelse(d$diag_3 %in% c(390:459, 785), "Diabetes",
ifelse(d$diag_3 %in% c(460:519, 786), "Respiratory",
ifelse(d$diag_3 %in% c(520:579, 787), "Digestive",
ifelse(d$diag_3 %in% c(800:999), "Injury",
ifelse(d$diag_3 %in% c(710:739), "Musculoskeletal",
ifelse(d$diag_3 %in% c(580:629, 788), "Genitourinary",
ifelse(d$diag_3%in% c(140:239), "Neoplasm",
ifelse(d$diag_3 %in% c(780, 781, 784, 790:799), "Other",
ifelse(d$diag_3 %in% c(240:249, 251:279), "Endocrine_Nutrition_Metabolic",
ifelse(d$diag_3 %in% c(680:709, 782), "Skin",
ifelse(d$diag_3 %in% c(001:139), "Infectious",
ifelse(d$diag_3 %in% c(290:319), "Mental",
ifelse(d$diag_3 %in% c(280:289), "Blood",
ifelse(d$diag_3 %in% c(320:359), "Nervous",
ifelse(d$diag_3 %in% c(630:679), "Pregnancy",
ifelse(d$diag_3 %in% c(360:389), "Sense",
ifelse(d$diag_3 %in% c(740:759), "Congenital", "NULL")
)))))))))))))))))))
d$diag_1grp <- as.factor(d$diag_1grp)
d$diag_2grp <- as.factor(d$diag_2grp)
d$diag_3grp <- as.factor(d$diag_3grp)
d <- one_hot(data.table(d), cols = c("diag_1grp", "diag_2grp", "diag_3grp"))
d <- as.data.frame(d)
# Encoding gender as 0 = male, 1 = female, 2 = Unknown/Invalid
d$gender <- ifelse(d$gender == "Male", 0,
ifelse(d$gender == "Female", 1,
ifelse(d$gender == "Unknown/Invalid", 2, "NULL")))
d$gender <- as.integer(d$gender)
# Encoding ages
start_age <- ifelse(d$age == "[0-10)", 0,
ifelse(d$age == "[10-20)", 10,
ifelse(d$age == "[20-30)", 20,
ifelse(d$age == "[30-40)", 30,
ifelse(d$age == "[40-50)", 40,
ifelse(d$age == "[50-60)", 50,
ifelse(d$age == "[60-70)", 60,
ifelse(d$age == "[70-80)", 70,
ifelse(d$age == "[80-90)", 80, 90)))))))))
d$end_age <- ifelse(d$age == "[0-10)", 10,
ifelse(d$age == "[10-20)", 20,
ifelse(d$age == "[20-30)", 30,
ifelse(d$age == "[30-40)", 40,
ifelse(d$age == "[40-50)", 50,
ifelse(d$age == "[50-60)", 60,
ifelse(d$age == "[60-70)", 70,
ifelse(d$age == "[70-80)", 80,
ifelse(d$age == "[80-90)", 90, 100)))))))))
d <- within(d, rm(age))
d$max_glu_serum <- ifelse(d$max_glu_serum == "None", 0,
ifelse(d$max_glu_serum == "Norm", 1,
ifelse(d$max_glu_serum == ">200", 2, 3)))
# A1C change to abnormal (>7 and >8) = 2 , normal = 1, and none = 0
d$A1Cresult <- ifelse(d$A1Cresult == "None", 0,
ifelse(d$A1Cresult == "Norm", 1,
ifelse(d$A1Cresult %in% c(">7", ">8"), 2, "NULL")))
# Changing insulin to numeric
# 0 = No
# 1 = Down
# 2 = Steady
# 3 = Up
d$insulin <- ifelse(d$insulin == "No",0, ifelse(d$insulin == "Down", 1, ifelse(d$insulin == "Steady", 2, 3)))
# changing change to numeric
# 0 = No
# 1 = Ch
d$change <- ifelse(d$change == "Ch", 1, 0)
# changing readmitted to numeric
# 0 = No
# 1 = >30
# 2 = <30 (in order of most concerning level of readmission
d$readmitted <- ifelse(d$readmitted == "NO", 0, ifelse(d$readmitted == "<30", 1, 2))
# Sum of number of outpatient, emergency and inpatient encounters
d$healthcare_utilization <- (d$number_outpatient + d$number_emergency + d$number_inpatient)
# Creating sum of other meds on column
# (not all of these columns have all four options, but it was easier to code this way - gives same result)
d$metformin <- ifelse(d$metformin %in% c("Up", "Steady", "Down"),1,0)
d$repaglinide <- ifelse(d$repaglinide %in% c("Up", "Steady", "Down"),1,0)
d$nateglinide <- ifelse(d$nateglinide %in% c("Up", "Steady", "Down"),1,0)
d$chlorpropamide <- ifelse(d$chlorpropamide %in% c("Up", "Steady", "Down"),1,0)
d$glimepiride <- ifelse(d$glimepiride %in% c("Up", "Steady", "Down"),1,0)
d$acetohexamide <- ifelse(d$acetohexamide %in% c("Up", "Steady", "Down"),1,0)
d$glipizide <- ifelse(d$glipizide %in% c("Up", "Steady", "Down"),1,0)
d$glyburide <- ifelse(d$glyburide %in% c("Up", "Steady", "Down"),1,0)
d$tolbutamide <- ifelse(d$tolbutamide %in% c("Up", "Steady", "Down"),1,0)
d$pioglitazone <- ifelse(d$pioglitazone %in% c("Up", "Steady", "Down"),1,0)
d$rosiglitazone <- ifelse(d$rosiglitazone %in% c("Up", "Steady", "Down"),1,0)
d$acarbose <- ifelse(d$acarbose %in% c("Up", "Steady", "Down"),1,0)
d$miglitol <- ifelse(d$miglitol %in% c("Up", "Steady", "Down"),1,0)
d$troglitazone <- ifelse(d$troglitazone %in% c("Up", "Steady", "Down"),1,0)
d$tolazamide <- ifelse(d$tolazamide %in% c("Up", "Steady", "Down"),1,0)
d$examide <- ifelse(d$examide %in% c("Up", "Steady", "Down"),1,0)
d$citoglipton <- ifelse(d$citoglipton %in% c("Up", "Steady", "Down"),1,0)
d$glyburide.metformin <- ifelse(d$glyburide.metformin %in% c("Up", "Steady", "Down"),1,0)
d$glipizide.metformin <- ifelse(d$glipizide.metformin %in% c("Up", "Steady", "Down"),1,0)
d$glimepiride.pioglitazone <- ifelse(d$glimepiride.pioglitazone %in% c("Up", "Steady", "Down"),1,0)
d$metformin.rosiglitazone <- ifelse(d$metformin.rosiglitazone %in% c("Up", "Steady", "Down"),1,0)
d$metformin.pioglitazone <- ifelse(d$metformin.pioglitazone %in% c("Up", "Steady", "Down"),1,0)
d$num_other_diabetes_meds_up_stdy_dwn <- (d$metformin + d$repaglinide + d$nateglinide + d$chlorpropamide + d$glimepiride + d$acetohexamide + d$glipizide + d$glyburide + d$tolbutamide + d$pioglitazone + d$rosiglitazone + d$acarbose + d$miglitol + d$troglitazone + d$tolazamide + d$examide + d$citoglipton + d$glyburide.metformin + d$glipizide.metformin + d$glimepiride.pioglitazone + d$metformin.rosiglitazone + d$metformin.pioglitazone)
drops2 <- c("metformin", "repaglinide", "nateglinide", "chlorpropamide", "glimepiride", "acetohexamide", "glipizide",
"glyburide", "tolbutamide", "pioglitazone", "rosiglitazone", "acarbose", "miglitol", "troglitazone",
"tolazamide", "examide", "citoglipton", "glyburide.metformin", "glipizide.metformin", "glimepiride.pioglitazone",
"metformin.rosiglitazone", "metformin.pioglitazone", "diag_1", "diag_2", "diag_3")
d <- d[ , !(names(d) %in% drops2)]
# write data to csv file
d <- d %>% select()
write.csv(d, file = "dataset/clean_diabetic_data.csv")
library(dplyr)
library(tidyverse)
library(foreign)
library(data.table)
library(mltools)
## Reading in data
d <- read.csv("dataset/diabetic_data.csv", header = TRUE)
# Confirmed that none of the patients who expired were listed as readmitted
d <- filter(d, !(discharge_disposition_id %in% c(11, 19, 20, 21)))
drops <- c("encounter_id", "weight", "payer_code", "medical_specialty", "diabetesMed")
d <- d[ , !(names(d) %in% drops)]
# One-Hot Encoding Race
d$race_unknown <- ifelse(d$race == "?", 1, 0)
d$race_cauc <- ifelse(d$race == "Caucasian", 1, 0)
d$race_afam <- ifelse(d$race == "AfricanAmerican", 1, 0)
d$race_oth <- ifelse(d$race == "Other", 1, 0)
d$race_asian <- ifelse(d$race == "Asian", 1, 0)
d$race_hisp <- ifelse(d$race == "Hispanic", 1, 0)
d <- within(d, rm(race))
# set up dummy variables for admission types
d <- mutate(d, at_emergent = as.numeric(admission_type_id %in% c(1, 2, 7)),
at_elective = as.numeric(admission_type_id == 3),
at_other = as.numeric(admission_type_id %in% c(4, 5, 6, 8)))
# Set up dummy variables for discharge dispositions
d <- mutate(d, dd_home = as.numeric(discharge_disposition_id %in% c(1, 6, 8)),
dd_facility_transfer = as.numeric(discharge_disposition_id %in% c(2, 3, 4, 5, 10, 16, 17, 22, 23, 24, 30, 27, 28, 29)),
dd_other = as.numeric(discharge_disposition_id %in% c(7, 18, 25, 26)),
dd_admitted = as.numeric(discharge_disposition_id %in% c(9, 12, 15)),
# add_expired = as.numeric(discharge_disposition_id %in% c(11, 19, 20, 21)), (dropped patients who expired)
dd_hospice = as.numeric(discharge_disposition_id %in% c(13, 14)))
# Set up dummy variables for admission source
d <- mutate(d, as_outpatient = as.numeric(admission_source_id %in% c(1, 2, 3)),
as_facility_transfer = as.numeric(admission_source_id %in% c(4, 5, 6, 10, 18, 19, 22, 25, 26)),
as_ed = as.numeric(admission_source_id %in% c(7)),
as_other = as.numeric(admission_source_id %in% c(8, 9, 15, 17, 20, 21)),
as_newborn = as.numeric(admission_source_id %in% c(11, 12, 13, 14, 23, 24)))
d <- within(d, rm(admission_type_id))
d <- within(d, rm(discharge_disposition_id))
d <- within(d, rm(admission_source_id))
# Code to group ICD codes according to Table 2 in (Strack et al. 2014)
# 0 = ?
# 1 = external
# 2 = circulatory
# 3 = diabetes
# 4 = respiratory
# 5 = digestive
# 6 = injury
# 7 = musculoskeletal
# 8 = genitourinary
# 9 = neoplasm
# 10 = other
# 11 = endocrine_nutrition_metabolic
# 12 = skin
# 13 = infectious
# 14 = mental
# 15 = blood
# 16 = nervous
# 17 = pregnancy
# 18 = sense
# 19 = congenital
d$diag_1 <- as.character(d$diag_1)
d$diag_2 <- as.character(d$diag_2)
d$diag_3 <- as.character(d$diag_3)
d$diag_1grp <- ifelse (d$diag_1 == "?", "Unknown",
ifelse(grepl(d$diag_1, pattern = "[EV]") == T, "External",
ifelse(floor(as.numeric(d$diag_1)) == 250, "Circulatory",
ifelse(d$diag_1 %in% c(390:459, 785), "Diabetes",
ifelse(d$diag_1 %in% c(460:519, 786), "Respiratory",
ifelse(d$diag_1 %in% c(520:579, 787), "Digestive",
ifelse(d$diag_1 %in% c(800:999), "Injury",
ifelse(d$diag_1 %in% c(710:739), "Musculoskeletal",
ifelse(d$diag_1 %in% c(580:629, 788), "Genitourinary",
ifelse(d$diag_1 %in% c(140:239), "Neoplasm",
ifelse(d$diag_1 %in% c(780, 781, 784, 790:799), "Other",
ifelse(d$diag_1 %in% c(240:249, 251:279), "Endocrine_Nutrition_Metabolic",
ifelse(d$diag_1 %in% c(680:709, 782), "Skin",
ifelse(d$diag_1 %in% c(001:139), "Infectious",
ifelse(d$diag_1 %in% c(290:319), "Mental",
ifelse(d$diag_1 %in% c(280:289), "Blood",
ifelse(d$diag_1 %in% c(320:359), "Nervous",
ifelse(d$diag_1 %in% c(630:679), "Pregnancy",
ifelse(d$diag_1 %in% c(360:389), "Sense",
ifelse(d$diag_1 %in% c(740:759), "Congenital", "NULL")
)))))))))))))))))))
d$diag_2grp <- ifelse (d$diag_2 == "?", "Unknown",
ifelse(grepl(d$diag_2, pattern = "[EV]") == T, "External",
ifelse(floor(as.numeric(d$diag_2)) == 250, "Circulatory",
ifelse(d$diag_2 %in% c(390:459, 785), "Diabetes",
ifelse(d$diag_2 %in% c(460:519, 786), "Respiratory",
ifelse(d$diag_2 %in% c(520:579, 787), "Digestive",
ifelse(d$diag_2 %in% c(800:999), "Injury",
ifelse(d$diag_2 %in% c(710:739), "Musculoskeletal",
ifelse(d$diag_2 %in% c(580:629, 788), "Genitourinary",
ifelse(d$diag_2 %in% c(140:239), "Neoplasm",
ifelse(d$diag_2 %in% c(780, 781, 784, 790:799), "Other",
ifelse(d$diag_2 %in% c(240:249, 251:279), "Endocrine_Nutrition_Metabolic",
ifelse(d$diag_2 %in% c(680:709, 782), "Skin",
ifelse(d$diag_2 %in% c(001:139), "Infectious",
ifelse(d$diag_2 %in% c(290:319), "Mental",
ifelse(d$diag_2 %in% c(280:289), "Blood",
ifelse(d$diag_2 %in% c(320:359), "Nervous",
ifelse(d$diag_2 %in% c(630:679), "Pregnancy",
ifelse(d$diag_2 %in% c(360:389), "Sense",
ifelse(d$diag_2 %in% c(740:759), "Congenital", "NULL")
)))))))))))))))))))
d$diag_3grp <- ifelse (d$diag_3 == "?", "Unknown",
ifelse(grepl(d$diag_3, pattern = "[EV]") == T, "External",
ifelse(floor(as.numeric(d$diag_3)) == 250, "Circulatory",
ifelse(d$diag_3 %in% c(390:459, 785), "Diabetes",
ifelse(d$diag_3 %in% c(460:519, 786), "Respiratory",
ifelse(d$diag_3 %in% c(520:579, 787), "Digestive",
ifelse(d$diag_3 %in% c(800:999), "Injury",
ifelse(d$diag_3 %in% c(710:739), "Musculoskeletal",
ifelse(d$diag_3 %in% c(580:629, 788), "Genitourinary",
ifelse(d$diag_3%in% c(140:239), "Neoplasm",
ifelse(d$diag_3 %in% c(780, 781, 784, 790:799), "Other",
ifelse(d$diag_3 %in% c(240:249, 251:279), "Endocrine_Nutrition_Metabolic",
ifelse(d$diag_3 %in% c(680:709, 782), "Skin",
ifelse(d$diag_3 %in% c(001:139), "Infectious",
ifelse(d$diag_3 %in% c(290:319), "Mental",
ifelse(d$diag_3 %in% c(280:289), "Blood",
ifelse(d$diag_3 %in% c(320:359), "Nervous",
ifelse(d$diag_3 %in% c(630:679), "Pregnancy",
ifelse(d$diag_3 %in% c(360:389), "Sense",
ifelse(d$diag_3 %in% c(740:759), "Congenital", "NULL")
)))))))))))))))))))
d$diag_1grp <- as.factor(d$diag_1grp)
d$diag_2grp <- as.factor(d$diag_2grp)
d$diag_3grp <- as.factor(d$diag_3grp)
d <- one_hot(data.table(d), cols = c("diag_1grp", "diag_2grp", "diag_3grp"))
d <- as.data.frame(d)
# Encoding gender as 0 = male, 1 = female, 2 = Unknown/Invalid
d$gender <- ifelse(d$gender == "Male", 0,
ifelse(d$gender == "Female", 1,
ifelse(d$gender == "Unknown/Invalid", 2, "NULL")))
d$gender <- as.integer(d$gender)
# Encoding ages
start_age <- ifelse(d$age == "[0-10)", 0,
ifelse(d$age == "[10-20)", 10,
ifelse(d$age == "[20-30)", 20,
ifelse(d$age == "[30-40)", 30,
ifelse(d$age == "[40-50)", 40,
ifelse(d$age == "[50-60)", 50,
ifelse(d$age == "[60-70)", 60,
ifelse(d$age == "[70-80)", 70,
ifelse(d$age == "[80-90)", 80, 90)))))))))
d$end_age <- ifelse(d$age == "[0-10)", 10,
ifelse(d$age == "[10-20)", 20,
ifelse(d$age == "[20-30)", 30,
ifelse(d$age == "[30-40)", 40,
ifelse(d$age == "[40-50)", 50,
ifelse(d$age == "[50-60)", 60,
ifelse(d$age == "[60-70)", 70,
ifelse(d$age == "[70-80)", 80,
ifelse(d$age == "[80-90)", 90, 100)))))))))
d <- within(d, rm(age))
d$max_glu_serum <- ifelse(d$max_glu_serum == "None", 0,
ifelse(d$max_glu_serum == "Norm", 1,
ifelse(d$max_glu_serum == ">200", 2, 3)))
# A1C change to abnormal (>7 and >8) = 2 , normal = 1, and none = 0
d$A1Cresult <- ifelse(d$A1Cresult == "None", 0,
ifelse(d$A1Cresult == "Norm", 1,
ifelse(d$A1Cresult %in% c(">7", ">8"), 2, "NULL")))
# Changing insulin to numeric
# 0 = No
# 1 = Down
# 2 = Steady
# 3 = Up
d$insulin <- ifelse(d$insulin == "No",0, ifelse(d$insulin == "Down", 1, ifelse(d$insulin == "Steady", 2, 3)))
# changing change to numeric
# 0 = No
# 1 = Ch
d$change <- ifelse(d$change == "Ch", 1, 0)
# changing readmitted to numeric
# 0 = No
# 1 = >30
# 2 = <30 (in order of most concerning level of readmission
d$readmitted <- ifelse(d$readmitted == "NO", 0, ifelse(d$readmitted == "<30", 1, 2))
# Sum of number of outpatient, emergency and inpatient encounters
d$healthcare_utilization <- (d$number_outpatient + d$number_emergency + d$number_inpatient)
# Creating sum of other meds on column
# (not all of these columns have all four options, but it was easier to code this way - gives same result)
d$metformin <- ifelse(d$metformin %in% c("Up", "Steady", "Down"),1,0)
d$repaglinide <- ifelse(d$repaglinide %in% c("Up", "Steady", "Down"),1,0)
d$nateglinide <- ifelse(d$nateglinide %in% c("Up", "Steady", "Down"),1,0)
d$chlorpropamide <- ifelse(d$chlorpropamide %in% c("Up", "Steady", "Down"),1,0)
d$glimepiride <- ifelse(d$glimepiride %in% c("Up", "Steady", "Down"),1,0)
d$acetohexamide <- ifelse(d$acetohexamide %in% c("Up", "Steady", "Down"),1,0)
d$glipizide <- ifelse(d$glipizide %in% c("Up", "Steady", "Down"),1,0)
d$glyburide <- ifelse(d$glyburide %in% c("Up", "Steady", "Down"),1,0)
d$tolbutamide <- ifelse(d$tolbutamide %in% c("Up", "Steady", "Down"),1,0)
d$pioglitazone <- ifelse(d$pioglitazone %in% c("Up", "Steady", "Down"),1,0)
d$rosiglitazone <- ifelse(d$rosiglitazone %in% c("Up", "Steady", "Down"),1,0)
d$acarbose <- ifelse(d$acarbose %in% c("Up", "Steady", "Down"),1,0)
d$miglitol <- ifelse(d$miglitol %in% c("Up", "Steady", "Down"),1,0)
d$troglitazone <- ifelse(d$troglitazone %in% c("Up", "Steady", "Down"),1,0)
d$tolazamide <- ifelse(d$tolazamide %in% c("Up", "Steady", "Down"),1,0)
d$examide <- ifelse(d$examide %in% c("Up", "Steady", "Down"),1,0)
d$citoglipton <- ifelse(d$citoglipton %in% c("Up", "Steady", "Down"),1,0)
d$glyburide.metformin <- ifelse(d$glyburide.metformin %in% c("Up", "Steady", "Down"),1,0)
d$glipizide.metformin <- ifelse(d$glipizide.metformin %in% c("Up", "Steady", "Down"),1,0)
d$glimepiride.pioglitazone <- ifelse(d$glimepiride.pioglitazone %in% c("Up", "Steady", "Down"),1,0)
d$metformin.rosiglitazone <- ifelse(d$metformin.rosiglitazone %in% c("Up", "Steady", "Down"),1,0)
d$metformin.pioglitazone <- ifelse(d$metformin.pioglitazone %in% c("Up", "Steady", "Down"),1,0)
d$num_other_diabetes_meds_up_stdy_dwn <- (d$metformin + d$repaglinide + d$nateglinide + d$chlorpropamide + d$glimepiride + d$acetohexamide + d$glipizide + d$glyburide + d$tolbutamide + d$pioglitazone + d$rosiglitazone + d$acarbose + d$miglitol + d$troglitazone + d$tolazamide + d$examide + d$citoglipton + d$glyburide.metformin + d$glipizide.metformin + d$glimepiride.pioglitazone + d$metformin.rosiglitazone + d$metformin.pioglitazone)
drops2 <- c("metformin", "repaglinide", "nateglinide", "chlorpropamide", "glimepiride", "acetohexamide", "glipizide",
"glyburide", "tolbutamide", "pioglitazone", "rosiglitazone", "acarbose", "miglitol", "troglitazone",
"tolazamide", "examide", "citoglipton", "glyburide.metformin", "glipizide.metformin", "glimepiride.pioglitazone",
"metformin.rosiglitazone", "metformin.pioglitazone", "diag_1", "diag_2", "diag_3")
d <- d[ , !(names(d) %in% drops2)]
# write data to csv file
write.csv(d, file = "dataset/clean_diabetic_data.csv")
